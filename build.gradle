plugins {
    id "dev.architectury.loom" version "1.6.+"
    id "maven-publish"
}

base {
    archivesName = project.archives_base_name
}

version = project.mod_version
group = project.maven_group

loom {
    silentMojangMappingsLicense()
}

repositories {
    maven {
        name = "Neo's Maven (Neoforge)"
        url = "https://maven.neoforged.net/releases"
    }

    maven {
        name = "Dan's Maven (Architectury)"
        url = "https://maven.architectury.dev"
        content {
            includeGroup "dev.architectury"
        }
    }

    maven {
        name = "Lat's Maven (Rhino, KubeJS)"
        url = "https://maven.saps.dev/minecraft"
        content {
            includeGroup "dev.latvian.mods"
        }
    }
}

dependencies {
    /* MC Dependencies */
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    neoForge("net.neoforged:neoforge:${neo_version}")

    /* Kube Dependencies */
    modImplementation("dev.latvian.mods:kubejs-neoforge:${kjs_ver}")
    modRuntimeOnly("dev.latvian.mods:rhino-neoforge:${rhino_ver}")
    modRuntimeOnly("dev.architectury:architectury-neoforge:${arch_ver}")
}

processResources {
    inputs.property "version", project.version
    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

compileJava {
    options.encoding = "UTF-8"
    options.release.set(17)
}

java {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
    withSourcesJar()
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
    }
}
